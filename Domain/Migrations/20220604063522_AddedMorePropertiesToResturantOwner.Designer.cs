// <auto-generated />
using System;
using Domain.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Domain.Migrations
{
    [DbContext(typeof(ResturantDBContext))]
    [Migration("20220604063522_AddedMorePropertiesToResturantOwner")]
    partial class AddedMorePropertiesToResturantOwner
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("Domain.Entity.Resturant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ResturantOwnerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ResturantOwnerId");

                    b.ToTable("Resturants");
                });

            modelBuilder.Entity("Domain.Entity.ResturantOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ResturantOwner");
                });

            modelBuilder.Entity("Domain.Entity.ResturantTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Available")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberOfSeat")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ResturantId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ResturantId");

                    b.ToTable("ResturantTable");
                });

            modelBuilder.Entity("Domain.Entity.UserBookings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ResturantID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ResturantTable")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("UserBookings");
                });

            modelBuilder.Entity("Domain.Entity.Resturant", b =>
                {
                    b.HasOne("Domain.Entity.ResturantOwner", null)
                        .WithMany("Resturants")
                        .HasForeignKey("ResturantOwnerId");
                });

            modelBuilder.Entity("Domain.Entity.ResturantTable", b =>
                {
                    b.HasOne("Domain.Entity.Resturant", null)
                        .WithMany("ResturantTables")
                        .HasForeignKey("ResturantId");
                });

            modelBuilder.Entity("Domain.Entity.Resturant", b =>
                {
                    b.Navigation("ResturantTables");
                });

            modelBuilder.Entity("Domain.Entity.ResturantOwner", b =>
                {
                    b.Navigation("Resturants");
                });
#pragma warning restore 612, 618
        }
    }
}
